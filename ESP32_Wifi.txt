#include <WiFi.h>
#include <WebServer.h>

// Configuración de la red WiFi
const char* ssid = "iPhone de Emilio";           // Reemplaza con el nombre de tu red WiFi
const char* password = "12345678"; // Reemplaza con la contraseña de tu red WiFi

// Crear una instancia del servidor web en el puerto 80
WebServer server(80);

// Definir los pines para la comunicación serial con el Arduino Uno
#define RX_PIN 16 // GPIO16 (RX del ESP32)
#define TX_PIN 17 // GPIO17 (TX del ESP32)

// Inicializar HardwareSerial (UART2)
HardwareSerial mySerial(2); // UART2

void setup() {
  // Inicializar Serial para depuración
  Serial.begin(115200);
  delay(1000);
  Serial.println("Iniciando ESP32...");

  // Iniciar conexión WiFi antes de inicializar la comunicación serial
  WiFi.begin(ssid, password);
  Serial.print("Conectando a WiFi ");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConectado a WiFi");
  Serial.print("Dirección IP: ");
  Serial.println(WiFi.localIP());

  // Inicializar el puerto serial para comunicación con Arduino
  mySerial.begin(115200, SERIAL_8N1, RX_PIN, TX_PIN); // UART2, 115200 baudios
  Serial.println("Serial con Arduino iniciado en UART2");

  // Definir las rutas del servidor web
  server.on("/", handleRoot);
  server.on("/forward", handleForward);
  server.on("/backward", handleBackward);
  server.on("/left", handleLeft);
  server.on("/right", handleRight);
  server.on("/stop", handleStop);

  // Iniciar el servidor web
  server.begin();
  Serial.println("Servidor web iniciado");
}

void loop() {
  server.handleClient(); // Atender peticiones del cliente
}

// Función para manejar la ruta raíz "/"
void handleRoot() {
  String html = "<!DOCTYPE html><html lang='es'><head><meta charset='UTF-8'><title>Control del Robot</title></head><body>";
  html += "<h1>Control del Robot</h1>";
  html += "<button onclick=\"window.location.href='/forward'\">Adelante</button><br><br>";
  html += "<button onclick=\"window.location.href='/backward'\">Atrás</button><br><br>";
  html += "<button onclick=\"window.location.href='/left'\">Izquierda</button><br><br>";
  html += "<button onclick=\"window.location.href='/right'\">Derecha</button><br><br>";
  html += "<button onclick=\"window.location.href='/stop'\">Detener</button>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

// Funciones para manejar las acciones de control
void handleForward() {
  mySerial.write('F');  // Enviar el comando 'F' al Arduino Uno
  Serial.println("Enviado: F (Adelante)");
  server.send(200, "text/html", "Movimiento Adelante");
}

void handleBackward() {
  mySerial.write('B');  // Enviar el comando 'B' al Arduino Uno
  Serial.println("Enviado: B (Atrás)");
  server.send(200, "text/html", "Movimiento Atrás");
}

void handleLeft() {
  mySerial.write('L');  // Enviar el comando 'L' al Arduino Uno
  Serial.println("Enviado: L (Izquierda)");
  server.send(200, "text/html", "Movimiento Izquierda");
}

void handleRight() {
  mySerial.write('R');  // Enviar el comando 'R' al Arduino Uno
  Serial.println("Enviado: R (Derecha)");
  server.send(200, "text/html", "Movimiento Derecha");
}

void handleStop() {
  mySerial.write('S');  // Enviar el comando 'S' al Arduino Uno
  Serial.println("Enviado: S (Detener)");
  server.send(200, "text/html", "Movimiento Detenido");
}
